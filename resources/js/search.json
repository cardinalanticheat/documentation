[[{"l":"Welcome","p":["Cardinal Anticheat is a Minecraft anticheat that uses more than a hundred different checks to make players have a hard time hacking on your server. Each check is unique and designed specifically for Cardinal Anticheat trying to always find methods and ways that haven't been tested before. This offers a great advantage in keeping your server safe from hackers while known anti-cheats can't do the job."]},{"l":"Testserver","p":["If you are interested but don't want to buy a license right away, you are welcome to join the official public testserver","In case the server is offline, please join the official discord server and give me a notice that you want to test the anticheat on the testserver."]},{"l":"Features","p":["Apart from detecting cheaters, Cardinal Anticheat also offers a lot of other features that may be useful for you as a server owner.","Feature","Description","Addons","Cardinal also allows loading, developing and sharing addons. There are already some addons on my discord server. Furthermore, there is a rather good documentation for developers on how to write your own addons here","Report System","Maybe you don't want a player to be banned right away or lower the chance of banning a legit player. For this reason it makes sense to use Cardinal's report system. Each flag is saved in the database using a dialect and based on the number and type of flags, a moderator can decide for himself when a player should be banned. For example, you only ban the 10% of players with the most flags each month etc. Maybe you want to introduce some form of trust factor and scale damage as a result. You might want to let players with similar trust factors play against each other. If you are a developer and want to get to implement such a system, the possibilities are limitless","Custom Ban Manager","By default Cardinal Anticheat doesn't handle a database connection. The reason is fairly easy to understand. Cardinal Anticheat is a close source plugin whose source is never disclosed. This has legitimate security and privacy concerns","Built-in ban system","As already stated does Cardinal Anticheat not handle any database connections by default, however using the built-in ban system requires you to use a so-called dialect which you have to write yourself. The documentation for writing a dialect is available here. Due to inquiries a dialect for the mongo and mysql driver has already been written. You can download them here"]}],[{"l":"Getting Started","p":["Cardinal requires Java 8 or above to run. You can download the latest version of Java here. For Java 9 and above take a look at the Run on Java 9+ Module System section. If you want to use more advanced features that surpass the capabilities of spigot, you can take a look at the tcpdump section."]},{"l":"Choose an Edition","p":["There are currently two editions available. They are different in features and pricing. Please check out the pricing page to check out all the available information on the different editions."]},{"l":"Download Community Edition","p":["You can download the latest community version of Cardinal here. Please keep in mind that the community version is limited to 10 players and does not support the use of addons as well as banning players. The community version is only meant for testing purposes as well as to be able to give me feedback and report bugs. Really active community members can receive a free license key for the pro edition.","Getting Started"]},{"l":"Buy Pro Edition","p":["You can purchase a copy on builtbybit(also known as McMarket) or discord. Afterwards join my discord and notify micartey to receive your license key and being able to use all the features Cardinal provides. Until you receive your license key you can use the community edition to be able to configure Cardinal to your liking.","Cardinal.jar","To activate the license key you have to edit the Config.yml and change the last line to include your license key. Restart the server and you are ready to go."]},{"l":"Configuration","p":["While Cardinal is mostly plug-and-play, there are a few things that need to be considered or done. Please read through the following steps and make changes if needed."]},{"i":"run-on-java-9-module-system","l":"Run on Java 9+ Module System","p":["Cardinal uses JCloak a project which aims to secure the jar file by providing additional runtime and decompiliation features. Because JCloak uses reflection and Java 9+ introduced a new module system the following JVM flag is mandatory for Java 9 and above:","It is overall questionable why Java 9+ introduced this module system in the first place as it breaks a lot of existing code."]},{"l":"Stay on a fixed version","p":["Cardinal consists of a loader that always uses the latest release so that you don't have to download newer versions. While each release is always tested and walks through several stages you might want to wait to verify that a new version is compatible and stable. To stay on a fixed version, you only have to set an environment variable before starting the server:","The current hash can be shown by executing the cac command and save the last 8 characters."]},{"l":"Use unreleased versions","p":["While stable versions are more beneficial, you might want to test out newer features, detections or fixes before it has been rolled-out. You can do this by setting another environment variable:"]},{"l":"Configure netty threads","p":["Cardinal takes (as of the 4.x release) some time to handle the packets. This has no impact on the servers tps or gameplay. Some packets (e.g. movement packets) trigger an environment update to be able to accurately evaluate the players actions. These updates may take a few milliseconds. While this is not a lot, it can sum up when a lot of players are on the same thread resulting in a negative balance and creating the impression that the server is crashing.","To fix this, simply edit the Spigot.yml and change the netty-threads to 2 or 3 times the expected amount players. This will assure a smooth gaming experience and fix any network delays you would've faced and should be done regardless of the anticheat you are using. The effect on cpu usage is neglectable."]},{"l":"Allow tcpdump","p":["Cardinal uses the tcpdump command to capture network packets at hardware layer. This may or may not create new possibilities for detecting cheaters. Currently, tcpdump is only being used to detect blink. This command is not available on non-root users by default. To allow its use, you have to execute the following command on your Linux server:","In case tcpdump is not installed, you can install it by executing the following command:"]}],[{"l":"From Zero to Hero","p":["Motivated by the Tour of Heroes from Angular","From Zero to Hero is a series of resources that will help you to get started with Cardinal. The series will cover the basics of the addon api and will also provide some examples.","It is recommended to start from the beginning and work your way through the series. It is also possible to jump to a specific topic specified in the table of contents."]},{"l":"Table of Contents","p":["Guide","Description","Setup","Getting started with the cardinal developer api and create addons that further enhance and customize the experience on your server","Events","Events are one of the more interesting and useful things the addons provide. They also make it possible to create version proof packet-based plugins","Database","Create a database connection to store player data"]}],[{"l":"Addons","p":["To get started, you need to add the extension api to your build file:","Add the JitPack repository to your build file","Add the dependency","Make sure to NOT export the source into your addon but use compileOnly for gradle and provide for maven.","After adding the addon api as a dependency, start by implementing Addon.","Unlike spigot, a file called addon.json must be created like following:"]}],[{"l":"Commands","p":["To handle commands you have to implement Command"]},{"l":"Register Commands","p":["You can register commands just like events with Extension.registerCommand"]}],[{"l":"Dialects","p":["As already mentioned, Cardinal Anticheat doesn't handle a database connection. The reason is fairly easy to understand. Cardinal Anticheat is a close source plugin whose source is never on the server physically. This has legitimate security and privacy concerns. However, Cardinal Anticheat still has a build in ban system and other features, such as storing flags as so-called reports.","A dialect is used to abstract the database handling by loading the dialect in form of an addon. Creating your own dialect secures the data usage and guarantees the protection of sensitive data, since Cardinal has neither access to the connection nor to any credentials which are typically required. In addition, this gives you the opportunity to migrate to any form of database you desire."]},{"l":"Getting Started","p":["You simply have to create a class and implement PunishDialect for bans and VialationDialect for reports. Both interfaces will require you to implement some methods but the implementation is up to you. You can use any database or file system to write and retrieve the information."]},{"l":"Register a dialect","p":["Registering a dialect is similar to any other event or command you're trying to register. Therefore, you need to get the static reference of Extension and call the method registerDialect with the required arguments."]}],[{"l":"Events","p":["As you already know, you have to implement Listener to use bukkit events. In case you also want to use the build-in events of Cardinal-Anticheat you have to implement EventListener. That's because Cardinal-Anticheat has an entirely different event-system. It's possible to use bukkit events and cardinal events in the same class by implementing both classes.","The next difference is that Cardinal-Anticheat uses the annotation @EventManager.Target above methods. To make the events asynchronous, you can set the isAsync parameter to true(default is false).","Keep in mind, that asynchronous events cannot be cancelled. For a complete overview of all events, visit the javadoc reference."]},{"l":"Register Events","p":["You can register events by calling Extension.registerListener"]}],[{"l":"Troubleshoting","p":["Please always first check the console for exceptions and errors. Many exceptions are self-explanatory and can be fixed by reading the error message or after a quick google.","If you can't find a solution to your problem, please create a new issue on GitHub and provide the required information. Issues without the required information will be closed without further notice."]}],[{"l":"License Agreement","p":["This software and accompanying documentation (the \"Software\") is the property of micartey and is protected by copyright, trademark, patent, and/or other intellectual property laws. The use, copying, and distribution of the Software is strictly prohibited, except as expressly permitted herein. The Software is licensed, not sold, to you for use only under the terms of this license agreement.","You are granted a limited, non-exclusive, non-transferable license to use the Software, solely for personal use. You are not allowed to copy, distribute, modify, sublicense, or sell the Software. Notwithstanding the foregoing, you are permitted to make a reasonable number of backup copies of the Software, solely for the purpose of reinstalling or archiving the Software. The backup copies must include all copyright information contained on the original.","In order to use the Software, an active and stable internet connection is mandatory. This is required to verify the legitimacy of the license, authenticate user accounts, and facilitate necessary updates or functionalities of the Software","Any unauthorized use, reproduction or distribution of this Software is expressly prohibited by law, and may result in severe civil and criminal penalties, but definitely in the revocation of the license until further notice.","This license does not grant you any rights in connection with any trademarks or service marks of jcloak. Your misuse of the trademarks displayed on the Software, or any other content on the Software, except as provided herein, is strictly prohibited.","By using the Software, you agree to the terms and conditions set forth in this agreement. If you do not agree to these terms, do not use or copy the Software.","This license agreement may be updated or changed at any time without prior notice. It is your responsibility to review the agreement for updates or changes. Continued use of the Software following the posting of changes or updates will be considered your acceptance of those changes.","Last Update: 08.06.2023"]},{"l":"Disclaimer of Warranty","p":["THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"Pricing","p":["1","10","19.99€","3","Addons","Banning","Community","Devices / Servers","Features","Free","Limited","Not found what your was searching for? Please contact me for invidial plans.","Players","Priority","Pro","Support","Unlimited"]}]]