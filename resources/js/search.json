[[{"l":"Welcome","p":["Cardinal Anticheat is a Minecraft anticheat that uses several novel approches to make players have a hard time hacking on your server. Each check is unique and designed specifically for Cardinal Anticheat always trying to find methods and ways that haven't been tested before. This offers a great advantage in keeping your server safe from hackers while known anti-cheats can't do the job."]},{"l":"Testserver","p":["If you are interested, you are welcome to join the official public testserver and try it yourself!","In case the server is offline, please join the official discord server and give me a notice that you want to test the anticheat on the testserver."]},{"l":"Features","p":["Apart from detecting cheaters, Cardinal Anticheat also offers a lot of other features that may be useful for you as a server owner.","Feature","Description","Bedrock Support","As one of few, Cardinal supports Bedrock. This includes detecting cheats while other anticheats only exempt/whitelist bedrock players (Experimental)","Addons","Cardinal also allows loading, developing and sharing addons. There are already some addons on my discord server. Furthermore, there is a rather good documentation for developers on how to write your own addons here","Reports","Each flag will be stored as a so called \"report\". Players with a lot of reports are very probably cheating. Moderators can vew a sorted list of the players with the most reports and decide to ban those with an unusual high amount of reports","Dialects","As closed source projects have legitimate doubts about security and privacy, Cardinal doesn't handle any database connections. Reading and writing is only possible through dialects which are a form of addons and provide a high level of security","Always-up to date","Cardinal uses a dynamic loading strategy that provides better support for versioning than other plugins, which also includes the loading of the newest release on startup. This provides better and easier hotfixes to everyone"]}],[{"l":"Getting Started","p":["This site serves as a general guide to get Cardinal up and running.","Download Cardinal","Commands","Permissions","Create Addons"]},{"i":"running-120-server","l":"Running 1.20+ Server","p":["When you run version 1.20 or abov, you need to set the following property:","This will prevent paper from trying to do some unwanted bytecode manipulation. However, this might break some legacy plugins that rely on the remapping to work."]}],[{"l":"Configuration"}],[{"l":"Commands","p":["A custom report system only for staffs in which each flag will be a 'report' which will be stored","Bans a player permanently","cac ban","cac config","cac config export","cac config import","cac flag","cac info","cac reboot","cac reload","cac report","cac reset","cac unban","Command","Description","Export the current settings into a single file","Import settings from a file","Open in-game GUI to configure Cardinal Anticheat","Reloads configurations","Resets the violations of a player","Restarts the plugin","Shows the flags/alerts","Tells you whether a player is banned or not","Unbans a player"]}],[{"l":"Logging","p":["Cardinal logs exceptions to /plugins/CAC/logs and creates a file for each day. In case you run into any kind of bug, please create an issue on github and append the log file.","If you want to disable logging, you can simply add the following JVM flag:","However, in most cases you don't need to disable logging. Only exceptions are logged and they hardly occure. They mainly occure when the bukkit api changes things in releases and these changes haven't been reflected in the code base. Therefore, these exceptions are very important for the further development of Cardinal."]}],[{"l":"Permissions","p":["Allows you to ban a player","Allows you to edit and manage reports","Allows you to freeze a player","Allows you to join even though your ip might be a proxy","Allows you to manage addons","Allows you to toggle alerts","Allows you to unban a player","Allows you to use most of the commands","Allows you to use tab-completeion","cardinal.common.addon","cardinal.common.alerts","cardinal.common.command","cardinal.common.freeze","cardinal.common.proxy","cardinal.common.tabcomplete","cardinal.manager.ban","cardinal.manager.report","cardinal.manager.unban","Description","Permission"]}],[{"l":"Versioning","p":["Cardinal uses by default the latest nightly release"]},{"l":"Stay on a fixed version","p":["Cardinal consists of a loader that always uses the latest release so that you don't have to download newer versions. To stay on a fixed version, you only have to set an environment variable before starting the server:","The current hash can be shown by executing the cac command and save the last 8 characters."]},{"l":"Use unreleased versions","p":["While stable versions are more beneficial, you might want to test out newer features, detections or fixes before it has been rolled-out. You can do this by setting another environment variable:"]}],[{"l":"From Zero to Hero","p":["From Zero to Hero is a series of resources that will help you to get started to develop with Cardinal. The series will cover the basics of the addon api and will also provide some examples.","It is recommended to start from the beginning and work your way through the series. It is also possible to jump to a specific topic specified in the table of contents."]},{"l":"Table of Contents","p":["Guide","Description","Setup","Getting started with the cardinal developer api and create addons that further enhance and customize the experience on your server","Events","Events are one of the more interesting and useful things the addons provide. They also make it possible to create version proof packet-based plugins","Database","Create a database connection to store player data"]},{"l":"Examples","p":["Name","Description","Testserver","Adds features and wanted behaviours to the anticheat in order to run it on a testserver","MySQL-Dialect","Dialect to store bans and reports"]}],[{"l":"Addons","p":["To get started, you need to add the extension api to your build file:","Add the JitPack repository to your build file","Add the dependency","Make sure to NOT export the source into your addon but use compileOnly for gradle and provide for maven.","After adding the addon api as a dependency, start by implementing Addon.","Unlike spigot, a file called addon.json must be created like following:"]}],[{"l":"Commands","p":["To handle commands you have to implement Command"]},{"l":"Register Commands","p":["You can register commands just like events with Extension.registerCommand"]}],[{"l":"Dialects","p":["Cardinal has a ready-to-use mysql dialact available.","Use /cac addon get and look for the necessary dialects. Executing the entire command with the required dialect will automatically install the dialect.","Cardinal Anticheat doesn't handle a database connection. The reason is fairly easy to understand. Cardinal Anticheat is a close source plugin whose source is never on the server physically. This has legitimate security and privacy concerns. However, Cardinal Anticheat still has a build in ban system and other features, such as storing flags as so-called reports.","A dialect is used to abstract the database handling by loading the dialect in form of an addon. Creating your own dialect secures the data usage and guarantees the protection of sensitive data, since Cardinal has neither access to the connection nor to any credentials which are typically required. In addition, this gives you the opportunity to migrate to any form of database you desire."]},{"l":"Implement a dialect","p":["You simply have to create a class and implement PunishDialect for bans and VialationDialect for reports. Both interfaces will require you to implement some methods but the implementation is up to you. You can use any database or file system to write and retrieve the information."]},{"l":"Register the interfaces","p":["Registering a dialect is similar to any other event or command you're trying to register. Therefore, you need to get the static reference of Extension and call the method registerDialect with the required arguments."]}],[{"l":"Events","p":["As you already know, you have to implement Listener to use bukkit events. In case you also want to use the build-in events of Cardinal-Anticheat you have to implement EventListener. That's because Cardinal-Anticheat has an entirely different event-system. It's possible to use bukkit events and cardinal events in the same class by implementing both classes.","The next difference is that Cardinal-Anticheat uses the annotation @EventManager.Target above methods. To make the events asynchronous, you can set the isAsync parameter to true(default is false).","Keep in mind, that asynchronous events cannot be cancelled. For a complete overview of all events, visit the javadoc reference."]},{"l":"Register Events","p":["You can register events by calling Extension.registerListener"]}],[{"l":"Troubleshooting","p":["Please always first check the console for exceptions and errors. Many exceptions are self-explanatory and can be fixed by reading the error message or after a quick google.","If you can't find a solution to your problem, please create a new issue on GitHub and provide the required information. Issues without the required information will be closed without further notice."]}],[{"l":"License Agreement","p":["This software and accompanying documentation (the \"Software\") is the property of micartey and is protected by copyright, trademark, patent, and/or other intellectual property laws. The use, copying, and distribution of the Software is strictly prohibited, except as expressly permitted herein. The Software is licensed, not sold, to you for use only under the terms of this license agreement.","You are granted a limited, non-exclusive, non-transferable license to use the Software, solely for personal use. You are not allowed to copy, distribute, modify, sublicense, or sell the Software. Notwithstanding the foregoing, you are permitted to make a reasonable number of backup copies of the Software, solely for the purpose of reinstalling or archiving the Software. The backup copies must include all copyright information contained on the original.","In order to use the Software, an active and stable internet connection is mandatory. This is required to verify the legitimacy of the license, authenticate user accounts, and facilitate necessary updates or functionalities of the Software","Any unauthorized use, reproduction or distribution of this Software is expressly prohibited by law, and may result in severe civil and criminal penalties, but definitely in the revocation of the license until further notice.","This license does not grant you any rights in connection with any trademarks or service marks of jcloak. Your misuse of the trademarks displayed on the Software, or any other content on the Software, except as provided herein, is strictly prohibited.","By using the Software, you agree to the terms and conditions set forth in this agreement. If you do not agree to these terms, do not use or copy the Software.","This license agreement may be updated or changed at any time without prior notice. It is your responsibility to review the agreement for updates or changes. Continued use of the Software following the posting of changes or updates will be considered your acceptance of those changes.","Last Update: 08.06.2023"]},{"l":"Disclaimer of Warranty","p":["THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"Pricing","p":["Features","Community","Pro","Banning","Mitigating","Bedrock Support","Devices / Servers","N/A","3","Support","Limited","Priority","Free","9.99€","Cardinal is usable for free, but purchasing the full version ensures higher priority support, some specific features and greatly helps to develop and improve it further."]}]]